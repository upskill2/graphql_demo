plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.2'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'com.netflix.dgs.codegen' version '6.1.4'
}

group = 'com.course'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral ()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    compileOnly 'org.projectlombok:lombok'

    implementation 'net.datafaker:datafaker:2.1.0'
    implementation 'org.apache.commons:commons-lang3:3.12.0'

    implementation (platform ('com.netflix.graphql.dgs:graphql-dgs-platform-dependencies:6.0.0'))
    implementation 'com.netflix.graphql.dgs:graphql-dgs-extended-scalars'
    implementation 'com.netflix.graphql.dgs:graphql-dgs-spring-boot-starter'
}

tasks.named ('bootBuildImage') {
    builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named ('test') {
    useJUnitPlatform ()
}

generateJava {
    packageName = 'com.course.graphql.generated'
    generateClient = true
    typeMapping = [
            "Date"          : "java.time.LocalDate",
            "NonNegativeInt": "java.lang.Integer",
            "Url"           : "java.net.URL"
    ]
}

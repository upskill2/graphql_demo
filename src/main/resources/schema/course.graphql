scalar Date
scalar Url
scalar NonNegativeInt
scalar DateTime

union SmartSearchResult = Hello | Book

type Query {
    hello: Hello
    allHellos: [Hello]
    books(author: String): [Book]
    booksReleasedHistory (releasedInput: ReleaseHistoryInput! ): [Book]
    mobileApps(mobileAppFilter: MobileAppFilter): [MobileApp]
    pets(petsFilter: PetFilter): [Pet]
    smartSearch(keyword: String): [SmartSearchResult]
    additionalRequest: String

    me: User!
    problemLatestList: [Problem!]
    itemSearch(filter: SearchFilter): [SearchableItem]
    problemDetail(id: ID!): Problem!
    userCreate(user: UserCreateInput!): UserResponse!
    userLogin(username: UserLoginInput!): UserResponse!
    userActivation (user: UserActivationInput!): UserActivationResponse!
    problemCreate(problem: ProblemCreateInput!): ProblemResponse!
    createSolution(solution: SolutionCreateInput!): SolutionResponse!
    voteSolution(vote: SolutionVoteInput!): SolutionResponse!
}

type Mutation {
    createHello(helloInput: HelloInput!): Int
    replaceHelloMsg(helloInput: HelloInput!): [Hello]
    deleteHello(number: Int!): Int
}

type Subscription {
    randomStock: [Stock]
    problemsAdded: Problem!
    solutionVoteChanged (solutionId: ID!): Solution!
}



